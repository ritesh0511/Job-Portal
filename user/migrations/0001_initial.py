# Generated by Django 4.2.5 on 2023-10-15 13:23

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=140, validators=[django.core.validators.RegexValidator(message='Enter a valid name', regex='^([A-Za-z]+){4,}$')])),
                ('email', models.CharField(max_length=140, unique=True, validators=[django.core.validators.EmailValidator(message='Enter a valid email')])),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(max_length=140)),
                ('mobile_number', models.IntegerField(unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid mobile number', regex='^([789])?\\d{10}$')])),
                ('address', models.TextField(blank=True, null=True)),
                ('password', models.CharField(max_length=140, validators=[django.core.validators.RegexValidator(message='Enter a valid password', regex='^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$&*?])[a-zA-Z\\d!@#$&*?]{6,}')])),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('course', models.CharField(blank=True, max_length=140, null=True)),
                ('specialization', models.CharField(blank=True, max_length=140, null=True)),
                ('course_type', models.CharField(blank=True, max_length=140, null=True)),
                ('college', models.CharField(blank=True, max_length=140, null=True)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('year_of_passing', models.IntegerField(blank=True, null=True)),
                ('skills', models.CharField(blank=True, max_length=140, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('experience_level', models.CharField(blank=True, max_length=140, null=True)),
                ('designation', models.CharField(blank=True, max_length=140, null=True)),
                ('responsibility', models.TextField(blank=True, null=True)),
                ('company', models.CharField(blank=True, max_length=140, null=True)),
                ('location', models.CharField(blank=True, max_length=140, null=True)),
                ('worked_from', models.DateField(blank=True, null=True)),
                ('to', models.DateField(blank=True, null=True)),
                ('about_company', models.TextField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
